# üöÄ **Core Smart Contracts and Their Roles**

## **1. Aero.sol**
**Purpose:** Native ERC-20 token implementation.

**Key Features:**
- Acts as the base currency of the platform.
- Supports token transfers, approvals, and governance interactions.

---

## **2. VotingEscrow.sol**
**Purpose:** Manages token locking mechanisms and issuance of veTokens.

**Key Features:**
- veTokens are issued in proportion to token lock durations (up to 4 years).
- Lock positions can be tokenized as veNFTs (ERC-721).

---

## **3. Voter.sol**
**Purpose:** Handles community voting logic.

**Key Features:**
- Voting power is derived from veToken holdings.
- Directs token incentives and rewards to creator pools transparently.

---

## **4. VeArtProxy.sol**
**Purpose:** Provides metadata representation for veNFTs.

**Key Features:**
- Enhances visibility and transparency of voting power.
- Allows visualization of locked positions.

---

## **5. Router.sol**
**Purpose:** Facilitates token swaps and liquidity routing.

**Key Features:**
- Ensures smooth token flow across pools.
- Manages liquidity interactions.

---

## **6. RewardsDistributor.sol**
**Purpose:** Handles reward calculation and distribution.

**Key Features:**
- Ensures fair distribution of revenue based on voting outcomes.
- Rewards both voters and creators proportionally.

---

## **7. ProtocolGovernor.sol**
**Purpose:** Governs platform-level decisions and proposals.

**Key Features:**
- Decentralized governance via on-chain voting.
- Enables the introduction of new platform features or rules.

---

## **8. ProtocolForwarder.sol**
**Purpose:** Acts as an execution layer for governance decisions.

**Key Features:**
- Automatically enforces successful governance votes.
- Executes protocol-level actions transparently.

---

## **9. PoolFees.sol**
**Purpose:** Manages fee structures across creator pools.

**Key Features:**
- Aggregates and distributes fees from various revenue sources (ads, NFT sales, subscriptions).

---

## **10. Pool.sol**
**Purpose:** Handles individual creator pool mechanics.

**Key Features:**
- Each pool represents a creator or initiative.
- Directs rewards based on community votes.

---

## **11. Minter.sol**
**Purpose:** Controls native token minting and emission schedules.

**Key Features:**
- Ensures controlled token issuance.
- Supports dynamic reward emission rates.

---

## **12. EpochGovernor.sol**
**Purpose:** Provides epoch-based governance rules and resets.

**Key Features:**
- Ensures snapshot-based governance.
- Manages reward cycles effectively.

---

## **13. AirdropDistributor.sol**
**Purpose:** Handles token airdrops and initial distribution events.

**Key Features:**
- Supports targeted token distributions.
- Ensures fairness and transparency during airdrop campaigns.

---

# üéØ **Adaptation for SocialFi: Tailoring for Creator-Driven Ecosystem**

### **1. Creator-Centric Governance**
- Governance focuses on funding creator pools rather than liquidity pools.
- veToken holders vote directly on creator initiatives and campaigns.

### **2. Dynamic Reward Allocation**
- Protocol emissions are dynamic and sustainable, avoiding inflationary tokenomics.
- Community votes guide how platform revenue is shared between creators and voters.

### **3. Custom Voting Metrics**
- Voting power isn‚Äôt just token-weighted but may include additional creator engagement metrics.

### **4. Cross-Platform Creator Integration**
- Creator pools will support cross-platform revenue streams (YouTube, Twitch, Patreon).
- Bridging tools will allow easy integration of external content feeds.

### **5. On-Chain Transparency**
- Every governance decision, reward payout, and voting snapshot is fully transparent and auditable on-chain.

---

# üîÑ **Smart Contract Workflow**

### **1. Token Locking (VotingEscrow.sol)**
- Users lock `[TOKEN_SYMBOL]` tokens and receive `ve[TOKEN_SYMBOL]`.
- veTokens represent voting power and accrue rewards.

### **2. Voting (Voter.sol)**
- veToken holders allocate votes to creator pools.
- Popular creator pools receive higher reward allocations.

### **3. Revenue Collection (Treasury Contract)**
- Ads, sponsorships, NFT royalties, and subscription fees flow into the Treasury Contract.

### **4. Rewards Distribution (RewardsDistributor.sol)**
- veToken holders and voted creators receive their proportional rewards.

### **5. Creator Withdrawals (Pool.sol)**
- Creators can claim earned rewards transparently.

---

# üìö **Documentation and Resources**
- Official Whitepaper: [Link to Whitepaper]
- Developer Documentation: [Link to Docs]
- API References: [Link to API Docs]

---

# ü§ù **Contributing**
We welcome contributions! Please follow our [Contribution Guidelines](CONTRIBUTING.md) and submit a Pull Request.

---

# üõ°Ô∏è **License**
This project is licensed under the [MIT License](LICENSE).

---

# üì¨ **Contact**
- Email: [team@example.com](mailto:team@example.com)
- Discord: [Link to Discord]
- Twitter: [Link to Twitter]
